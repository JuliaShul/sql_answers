SQL ЗАПРОСЫ-ОТВЕТЫ НА САЙТЕ http://sqlbolt.com/
ANSWERS:

Exercise 1:

1.(Find the title of each film)
SELECT title 
FROM movies;

2.(Find the director of each film)
SELECT director 
FROM movies;

3.(Find the title and director of each film)
SELECT title, director 
FROM movies;

4.(Find the title and year of each film)
SELECT title, year 
FROM movies;

5.(Find all the information about each film)
SELECT * FROM movies;

Exercise 2:

1.(Find the movie with a row id of 6)
SELECT * 
FROM movies 
WHERE id = 6;

2.(Find the movies released in the years between 2000 and 2010)
SELECT * 
FROM movies 
WHERE year BETWEEN 2000 AND 2010;

3.(Find the movies not released in the years between 2000 and 2010)
SELECT * 
FROM movies 
WHERE NOT year BETWEEN 2000 AND 2010;

4.(Find the first 5 Pixar movies and their release  year)
SELECT * 
FROM movies 
ORDER BY year 
LIMIT 5;

Exercise 3:

1.(Find all the Toy Story movies)
SELECT * 
FROM movies
WHERE title LIKE 'Toy Story%';

2.(Find all the movies directed by John Lasseter)
SELECT * 
FROM movies
WHERE Director LIKE 'John Lasseter';

3.(Find all the movies (and director) not directed by John Lasseter)
SELECT * 
FROM movies
WHERE NOT Director LIKE 'John Lasseter';

4.(Find all the WALL-* movies)
SELECT * 
FROM movies
WHERE title LIKE 'WALL%';

Exercise 4:

1.(List all directors of Pixar movies (alphabetically), without duplicates)
SELECT DISTINCT Director 
FROM movies
ORDER BY Director;

2.(List the last four Pixar movies released (ordered from most recent to least))
SELECT Title
FROM movies
ORDER BY year DESC
LIMIT 4;

3.(List the first five Pixar movies sorted alphabetically)
SELECT Title
FROM movies
ORDER BY title ASC
LIMIT 5;

4.(List the next five Pixar movies sorted alphabetically)
SELECT Title
FROM movies
ORDER BY title ASC
LIMIT 5 OFFSET 5;

Exercise 5:

1.(List all the Canadian cities and their populations)
SELECT Country, Population 
FROM north_american_cities
WHERE country LIKE 'Canada';

2.(Order all the cities in the United States by their latitude from north to south)
SELECT City
FROM north_american_cities
WHERE country LIKE 'United States'
ORDER BY Latitude DESC;

3.(List all the cities west of Chicago, ordered from west to east)
SELECT City
FROM north_american_cities
ORDER BY Longitude 
LIMIT 6;

4.(List the two largest cities in Mexico (by population))
SELECT City
FROM north_american_cities
WHERE country LIKE 'Mexico'
ORDER BY population DESC
LIMIT 2;

5.(List the third and fourth largest cities (by population) in the United States and their population)
SELECT City
FROM north_american_cities
WHERE country LIKE 'United States'
ORDER BY population DESC
LIMIT 2 OFFSET 2;

Exercise 6:

1.(Find the domestic and international sales for each movie)
SELECT title, Domestic_sales, International_sales 
FROM movies JOIN Boxoffice ON (Boxoffice.Movie_id=movies.id);

2.(Show the sales numbers for each movie that did better internationally rather than domestically)
SELECT title, Domestic_sales, International_sales 
FROM movies JOIN Boxoffice ON (Boxoffice.Movie_id=movies.id)
WHERE  Domestic_sales < International_sales;

3.(List all the movies by their ratings in descending order)
SELECT title, Rating
FROM movies JOIN Boxoffice ON (Boxoffice.Movie_id=movies.id)
ORDER BY Rating DESC;

Exercise 7:

1.(Find the list of all buildings that have employees)
SELECT DISTINCT Building 
FROM employees;

2.(Find the list of all buildings and their capacity)
SELECT * 
FROM Buildings;

3.(List all buildings and the distinct employee roles in each building (including empty buildings))
SELECT DISTINCT Building_name, Role
FROM Buildings LEFT JOIN Employees ON (Employees.Building=Buildings.Building_name);

Exercise 8:

1.(Find the name and role of all employees who have not been assigned to a building)
SELECT Role, Name 
FROM employees LEFT JOIN Buildings ON (Buildings.Building_name=employees.Building)
WHERE Building IS NULL;

2.(Find the names of the buildings that hold no employees)
SELECT Building_name 
FROM Buildings LEFT JOIN employees ON (employees.Building = Buildings.Building_name)
WHERE Building IS NULL;

Exercise 9:

1.(List all movies and their combined sales in millions of dollars)
SELECT Title, (Domestic_sales+International_sales)/1000000 AS Combined_sales 
FROM movies LEFT JOIN Boxoffice ON (Boxoffice.Movie_id=movies.id);

2.(List all movies and their ratings in percent)
SELECT Title, Rating*10 AS Rating 
FROM movies LEFT JOIN Boxoffice ON (Boxoffice.Movie_id=movies.id);

3.(List all movies that were released on even number years)
SELECT Title, Year
FROM movies LEFT JOIN Boxoffice ON (Boxoffice.Movie_id=movies.id)
WHERE Year%2 == 0;

Exercise 10:

1.(Find the longest time that an employee has been at the studio)
SELECT * 
FROM employees
ORDER BY Years_employed DESC
LIMIT 1;

2.(For each role, find the average number of years employed by employees in that role)
SELECT Role, AVG(Years_employed) AS Average_years
FROM employees
GROUP BY Role;

3.(Find the total number of employee years worked in each building)
SELECT building, SUM(Years_employed) AS total_years
FROM employees
GROUP BY building;